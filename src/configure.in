##########################################################################
#
# Bondi configure.in Copyright (C) 2008 Barry Jay 
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# Contributors:
#     Arun Kumar (arun@it.uts.edu.au)
#
###############################################################################
# Process this file with autoconf to produce a configure script.

###############################################################################
#########     M E S S A G E   D E F I N I T I O N S     #######################
ocamlDownloadInstructions="
      OCaml can be downloaded from http://caml.inria.fr/ocaml/.
      After downloading and unpacking the source distribution, in the ocaml
      directory, do
        ./configure
        make world
        make opt
        make install
      Then come back here and re-run ./configure."

ocamldotdownloadinstructions="
      ocamldot can be downloaded http://www.research.att.com/~trevor/ocamldot/
      uses Graphviz to visualise ocaml dependencies. Not crucial for building
      bondi.
      "
gnumakefile="
      GNU Make is expected, but not found. Will check if your system is supported.
      "

###############################################################################

###############################################################################
# INITIALISATIONS  
###############################################################################
AC_PREREQ(2.61)
AC_INIT(bondi, 1.6, arun.kumar.se@gmail.com)
AC_CONFIG_SRCDIR([gnu_readline.c])
#AC_CONFIG_HEADER([config.h])

###############################################################################
# C/C++ COMPILER AND LIBRARY CHECKS
###############################################################################
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_CPP

###############################################################################
# MAKE INSTALLATION CHECKS - GNU Make 
# The original make file is GNU based we need to check 
# the target system. Linux variants will function. GNU tools 
# are not available in Sun Solaris. In such cases a compatible  
# Makefile.in will be provided.
#
#
# Our intention is to support the following OS Platforms: 
# 1. Mac OS
# 2. Sun Solaris
# 3. Cygwin ( Windows )
# 4. Linux ( Ubuntu, Fedora, etc )  
# 5. Unix variants
###############################################################################

AC_CHECK_PROG(MAKEEXE,make,make,no)
if test "$MAKEEXE" = no ; then
    AC_MSG_ERROR(make is not available)
else
    AC_MSG_CHECKING(checking for GNU Make)
    ISGNUMAKE=`make -v | head -1 | cut -f 1-2 -d " "`
    if test "GNU Make" == "$ISGNUMAKE" ; then
        AC_MSG_RESULT(ok)
    else
        AC_MSG_RESULT([$gnumakefile])
    fi
fi

###############################################################################
# Test the target OS to provide a compatible Makefile
# only for the following:
# 1. Mac OS
# 2. Sun Solaris
# 5. Unix variants
#
###############################################################################

AC_CANONICAL_SYSTEM
AC_CANONICAL_HOST

###############################################################################
# SET ARCHITECTURE - code adapted from 
#                               https://trac.penjili.org/c2newspeak/browser/cil
###############################################################################
case "$target" in
  # linux
  *86*linux*|*86*freebsd*|*86*openbsd*|*86*darwin*)
    AC_MSG_RESULT(configuring for linux/x86)

    ARCHOS=linux
    ;;

  # Mac OS X
  *powerpc*darwin*)
    AC_MSG_RESULT(configuring for powerpc/darwin, which we treat like linux/x86)

    ARCHOS=macos
    ;;

  # cygwin
  *86*cygwin*)
    AC_MSG_RESULT(configuring for Cygwin on win32/x86)

    ARCHOS=cygwin
    ;;

  # Solaris
  *sparc*solaris*)
    AC_MSG_RESULT(configuring for SPARC/Solaris)
    ARCHOS=solaris
    ;;

  *)
    AC_MSG_ERROR([
      Unsupported platform $target -- sorry.
      ./configure supports these platforms:
         on x86:     Linux, Win32(with Cygwin), freeBSD, openBSD, and Mac OS X
         on PowerPC: Mac OS X 
         on SPARC:   Solaris
    ])
    ;;
esac

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLC
###############################################################################
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
    AC_MSG_ERROR([$ocamlDownloadInstructions])
fi

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLC 
###############################################################################

# we extract Ocaml version number and library path
OCAMLVERSION=`$OCAMLC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"
OCAMLLIB=`$OCAMLC -v | tail -1 | cut -f 4 -d " "`
echo "ocaml library path is $OCAMLLIB"

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLOPT
###############################################################################
# then we look for ocamlopt; if not present, we issue a warning
# if the version is not the same, we also discard it
# we set OCAMLBEST to "opt" or "byte", whether ocamlopt is available or not
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
OCAMLBEST=byte
if test "$OCAMLOPT" = no ; then
	AC_MSG_WARN(Cannot find ocamlopt; bytecode compilation only.)
else
	AC_MSG_CHECKING(ocamlopt version)
	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
	    OCAMLOPT=no
	else
	    AC_MSG_RESULT(ok)
	    OCAMLBEST=opt
	fi
fi

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLDEP
###############################################################################
# ocamldep, ocamllex and ocamlyacc should also be present in the path
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
if test "$OCAMLDEP" = no ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLLEX
###############################################################################
AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
    AC_MSG_ERROR(Cannot find ocamllex.)
else
    AC_CHECK_PROG(OCAMLLEXDOTOPT,ocamllex.opt,ocamllex.opt,no)
    if test "$OCAMLLEXDOTOPT" != no ; then
	OCAMLLEX=$OCAMLLEXDOTOPT
    fi
fi

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLYACC
###############################################################################
AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
    AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

###############################################################################
# OCAML INSTALLATION CHECKS - OCAMLDOT 
###############################################################################
AC_CHECK_PROG(OCAMLDOT,ocamldot,ocamldot,no)
if test "$OCAMLDOT" = no ; then
    AC_MSG_WARN([$ocamldotdownloadinstructions])
fi

###############################################################################
# PERL INSTALLATION CHECKS 
###############################################################################
AC_CHECK_PROG(PERL,perl,perl,no)
if test "$PERL" = no ; then
    AC_MSG_ERROR(Cannot find perl.)
fi

###############################################################################
# LD INSTALLATION CHECKS 
###############################################################################
AC_CHECK_PROG(LD,ld,ld,no)
if test "$LD" = no ; then
    AC_MSG_ERROR(Cannot find ld.)
fi

###############################################################################
# AS INSTALLATION CHECKS 
###############################################################################
AC_CHECK_PROG(AS,as,as,no)
if test "$AS" = no ; then
    AC_MSG_ERROR(Cannot find as.)
fi

###############################################################################
# AR INSTALLATION CHECKS 
###############################################################################
AC_CHECK_PROG(AR,ar,ar,no)
if test "$AR" = no ; then
    AC_MSG_ERROR(Cannot find ar.)
fi

###############################################################################
# RANLIB INSTALLATION CHECKS 
###############################################################################
AC_CHECK_PROG(RANLIB,ranlib,ranlib,no)
if test "$RANLIB" = no ; then
    AC_MSG_ERROR(Cannot find ranlib.)
fi

###############################################################################
# C LIBRARY INSTALLATION CHECKS 
###############################################################################
AC_CHECK_LIB([c], [main])
AC_CHECK_LIB([curses], [main])
AC_CHECK_LIB([readline], [main],[READLINE=-DHAVE_GNU_READLINE])
AC_CHECK_LIB([readline], [main],[OCAML_READLINE=l_readline])

###############################################################################
# C HEADER FILES INSTALLATION CHECKS 
###############################################################################
AC_HEADER_STDC
AC_CHECK_HEADERS([string.h])

AC_FUNC_MALLOC

# substitutions to perform
AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLLEX)
AC_SUBST(OCAMLYACC)
AC_SUBST(OCAMLBEST)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLLIB)
AC_SUBST(PERL)
AC_SUBST(LD)
AC_SUBST(AS)
AC_SUBST(AR)
AC_SUBST(RANLIB)
AC_SUBST(OCAMLDOT)
AC_SUBST(READLINE)
AC_SUBST(OCAML_READLINE)

# Finally create the Makefile from Makefile.in
AC_OUTPUT([$ARCHOS]/Makefile)
cp $ARCHOS/Makefile .

